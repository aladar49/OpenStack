heat_template_version: 2015-10-15

description: >
  HOT template to create a new neutron network plus a router to the public
  network. The template also assigns floating IP addresses to a wordpress server.

parameters:
  public_net:
    type: string
    description: public network id

  image:
    type: string
    description: Image Name

  key_name:
    type: string
    default: mykey
    description: Name of an existing key pair to use for the instance

  db_name:
    type: string
    description: WordPress database name
    default: wordpress

  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true

  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true

  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true

resources:
  private_network:
    type: OS::Neutron::Net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_network }
      cidr: '10.0.4.0/24'
      dns_nameservers: [ '8.8.8.8' ]
      enable_dhcp: 'true'

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_network }
      security_groups:
        - { get_resource: server_security_group }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: server_port }

  server:
    type: OS::Nova::Server
    properties:
      name: Wordpress
      image: { get_param: image }
      flavor: m1.small
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Running boot script"
            yum -y install mariadb mariadb-server httpd wordpress
            touch /var/log/mariadb/mariadb.log
            chown mysql.mysql /var/log/mariadb/mariadb.log
            systemctl start mariadb.service

            # Setup MySQL root password and create a user
            mysqladmin -u root password db_rootpassword
            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON db_name.* TO "db_user"@"localhost"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF

            sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
            sed -i s/database_name_here/db_name/ /etc/wordpress/wp-config.php
            sed -i s/username_here/db_user/ /etc/wordpress/wp-config.php
            sed -i s/password_here/db_password/ /etc/wordpress/wp-config.php
            systemctl start httpd.service

            echo "Ending boot script"
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80

